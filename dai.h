// интерфейс к dll анализа данных в линзе программы krotw32
// Defect Artificial Intelligence (DAI)

#define DAIAPI _stdcall                  // соглашение о вызове между программой просмотра и функциями DAI
#define EXPORT __declspec(dllexport)     // подавления манглинга имен в экспортируемых функциях
#define DAIDATA long                     // тип данных в буфере

// установленные пользователем атрибуты для изображения в линзе.
typedef struct {

long             internal;               // 0 - наружный дефект или 1 - внутренний
long             wallThickness;          // толщина стенки трубы в мм

// выделенная пользователем прямоугольная область внутри массива данных, 
// представляющая, по его мнению, наибольший интерес. 
// координаты даны в элементах массива. отсчет с 0.

long             x1;                     // номер колонки левого верхнего угла области
long             y1;                     // номер строки левого верхнего угла области
long             x2;                     // номер колонки правого нижнего угла области
long             y2;                     // номер строки правого нижнего угла области

} T_USERDAI;

// данные для анализа 
typedef struct {

T_USERDAI        user;                   // вспомогательная информация от пользователя
long             xSize;                  // размер массива данных по x
long             ySize;                  // размер массива данных по y
DAIDATA         *data;                   // указатель массив данных

// следующие данные позволяют оценить физические параметры анализируемого фрагмента
// положение на трубе по окружности, размер области в мм.

long             orntStart;              // положение первой строки массива данных по
                                         // окружности трубы в градусах (1-360)
long             orntLen;                // размер сектора по окружности трубы в градусах (1-360)
                                         // занимаемый анализируемым фрагментом
long             itemX;                  // протяженность элемента массива данных вдоль трубы 
                                         // в мм. (шаг опроса снаряда)
long             itemY;                  // протяженность элемента массива данных по окружности трубы 
                                         // в мм. (расстояние между датчиками)
} T_DAI; 

// размер буфера explainText в байтах
#define DAI_EXPLAIN_TEXT_MAX_LENGTH 4096
// значение возвращаемое при технической ошибке в процессе анализа данных
#define DAI_QUEST_ERROR -1L

// **************************************************************
long EXPORT DAIAPI daiQuest (
 T_DAI      *quest, 
 long (DAIAPI *informUser) (short percentDone), 
 char       *explainText

// функция анализирует данные структуры quest для ответа на вопрос:
// **************************************************************
// похож ли данный фрагмент записи на область стресс-коррозии?  *
// **************************************************************

// на массив данных для анализа указывает поле quest->data. 
// ВНИМАНИЕ! функция НЕ ДОЛЖНА изменять значения элементов массива, адресуемого
// этим указателем. Эти данные используются для создания изображения в линзе.

// если процесс анализа является продолжительным по времени, то во время работы
// может периодически вызывать по указателю функцию informUser. В качестве аргумента
// этой функции нужно передавать число от 0 до 100, показывающее приблизительный процент
// проделанных вычислений. Функция informUser возвращает одно из двух значений: 0 и 1.
// 0 означает, что вычисления можно продолжать, 1 означает, что пользователь просит прервать
// работу.

// в случае, если в ходе анализа произошла техническая ошибка (например, недостаточно памяти, 
// невозможно открыть нужные файлы и т.п.), функция должна вернуть значение DAI_QUEST_ERROR
// текстовое описание ошибки нужно поместить в буффер explainText. размер этого буфера равен
// значению DAI_EXPLAIN_TEXT_MAX_LENGTH.

// в случае успешного завершения анализа функция должна вернуть число в диапазоне от 1 до 99.
// это число означает степень вероятности наличия на предьявленном фрагменте данных 
// стресс-коррозионных трещин. 99 - максимальная вероятность, 1 - минимальная вероятность.
// в буффер explainText можно поместить текстовое описание хода анализа, приведшее
// к полученному результату.

// особыми случаями являются возврат функцией значений 0 и 100.

// 0 означает, что на предьявленном фрагменте трещин нет, а есть известная функции особенность.
// в этом случае в буффер explainText нужно поместить текстовое описание того, что удалось
// обнаружить на предьявленном фрагменте.

// 100 означает, что на предьявленном фрагменте совершенно точно имеется сигнал от трещины,
// и функция может определить параметры этих трещин (длина, глубина, раскрытие и т.п). 
// в этом случае в буффер explainText нужно поместить текстовое описание параметров обнаруженных 
// трещин в произвольной форме.

);