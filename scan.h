// scan.h (C) 2006 by Vitaly Bogomolov 
#ifndef KRTAPI
#include "krotw32.h"
#endif

//
// Данный файл содержит константы и определения, задающие интерфейс для
// функции поиска поперечных швов, определения типа трубы и положения продольных швов.

// возможные значения типа трубы 

// неизвестный тип
#define TUBE_UNKNOWN  -1
// прямошовная
#define TUBE_DIRECT    0
// спиралешовная
#define TUBE_SPIRAL    1
// безшошная
#define TUBE_WITHOUT   2

/* *******************************************
 первоначальный алгоритм
******************************************* */

// структура входных данных для поиска швов
typedef struct {

 long            x;                // размер массивов данных по X
 long            y;                // размер массивов данных по Y
 KRTDATA        *dat;              // указатель на буфер обработанных данных
 KRTROW         *row;              // указатель на буфер сырых данных

 long            minTubeLen;       // минимальная длина трубы в показаниях датчиков

 long            maskSize;         // размер маски в показаниях датчиков
 long            listSize;         // ширина прокатного листа в показаниях датчиков
 long            signalLevel;      // уровень сигнала
 short           slitNum;          // ожидаемое количество продольных швов
 

 short           weldSensitiv;     // уровень чувствительности поперечных швов (от 1 до 100)
 short           slitSensitiv;     // уровень чувствительности продольных швов (от 1 до 100) 
                                   // если 0, то продольные швы определять не надо.
 short           spirSensitiv;     // то же для спиральных швов

 short           noDRC;            // если 1, то труба не может быть прямошовной
 short           noSPR;            // --- спиралешовной
 short           noWTO;            // --- бесшовной

} T_SCAN_INPUT;

// структура выходных данных найденного шва
typedef struct {
 long            wldIndex;         // индекс столбца найденного поперечного шва (-1 если не найден)
 short           wldTyp;           // тип трубы (одна из констант TUBE_* см.выше)
 short           slit1;            // номер датчика 1 продольного шва (-1 если нет)
 short           slit2;            // номер датчика 2 продольного шва (-1 если нет)
} T_SCAN_OUTPUT;

// функция анализа фрагмента развертки. ищет первый шов на этом фрагменте
extern short ProccessPage (const T_SCAN_INPUT *inp, T_SCAN_OUTPUT *out);

/* *******************************************
 алгоритм 2013
******************************************* */

// структура выходных данных найденного шва
typedef struct {
 long            wldIndex;         // индекс столбца найденного поперечного шва (-1 если не найден)
 short           wldTyp;           // тип трубы (одна из констант TUBE_* см.выше)
 short           slit1;            // номер датчика 1 продольного шва (-1 если нет)
 short           slit2;            // номер датчика 2 продольного шва (-1 если нет)
 short           crzIndex;         // пояс, по которому определены продольные швы
} T_SCAN_2013_OUTPUT;

// функция анализа фрагмента развертки. ищет первый шов на этом фрагменте
extern short AnalyseData(const T_TRACE *trc, const VB_TUBE_SCAN_IN *inpData, T_SCAN_2013_OUTPUT *out);
